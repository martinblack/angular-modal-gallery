// The MIT License (MIT)
//
// Copyright (c) 2017-2019 Stefano Cappa (Ks89)
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NON INFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

// all svgs are converted to base 64 with this website http://b64.io/

$main-img-container-margin-top: 20px;
$main-img-container-margin-bottom: 20px;

$curr-img-max-width-trick: 70vw;
$curr-img-max-width: 80vw;
$curr-img-max-height: 60vh;

$nav-animation-time: 1s;
$nav-transition-time: .5s;
$nav-side-margin: 15px;

$figcaption-padding: 10px;
$figcaption-position: absolute;
$figcaption-bottom: 0;
$figcaption-left: 0;
$figcaption-right: 0;

:host {
  display: flex;
  flex-direction: column;
  justify-content: center;
}

.main-image-container {
  display: flex;
  //flex-grow: 1;
  flex-direction: row;
  align-items: center;
  justify-content: space-between;
  //margin-top: $main-img-container-margin-top;
  //margin-bottom: $main-img-container-margin-bottom;

  .nav {
    animation: animatezoom $nav-animation-time;
    cursor: pointer;
    transition: all $nav-transition-time;

    &:hover {
      transform: scale(1.1);
    }
  }

  > .left-sub-container {
    display: flex;
    flex-direction: row;
    justify-content: space-around;
    align-items: center;

    > .nav-left {
      @extend .nav;
      margin-right: 5px;
      margin-left: $nav-side-margin;

      &.no-pointer {
        cursor: default !important;
      }
    }
  }

  > .right-sub-container {
    display: flex;
    flex-direction: row;
    justify-content: space-around;
    align-items: center;

    > .nav-right {
      @extend .nav;
      margin-right: $nav-side-margin;
      margin-left: 5px;

      &.no-pointer {
        cursor: default !important;
      }
    }
  }

  #current-figure {
    animation: fadein-visible .8s;
    text-align: center;
    margin: 0; // => Removes margin from every figure to prevent problem when resizing horizontally on tablets and smartphones
    position: relative;

    > #current-image {
      // display: block;
      // don't use this
      // Bootstrap 4 img-fluid class uses max-width: 100% and height: auto
      max-width: 100%;
      height: auto;
      display: block;

      &.unclickable {
        cursor: not-allowed;
      }
    }


    & figcaption {
      padding: $figcaption-padding;
      position: $figcaption-position;
      bottom: $figcaption-bottom;
      left: $figcaption-left;
      right: $figcaption-right;

      .description {
        font-weight: bold;
        text-align: center;
      }
    }
  }
}

#current-image {
  height: auto;
  // Thanks to vh ad vw I can resize the image when reducing browser's window both vertically and horizontally
  max-width: $curr-img-max-width;
  max-height: $curr-img-max-height;
  cursor: pointer;

  // trick found here https://stackoverflow.com/a/37600130/3590376
  // Using a media query I can set a max width
  @media screen and (min-width: $curr-img-max-width-trick) {
    // Thanks to vh ad vw I can resize the image when reducing browser's window both vertically and horizontally
    max-width: $curr-img-max-width-trick;
  }
}

@mixin fadein($opacity-from, $opacity-to) {
  from {
    opacity: $opacity-from;
  }
  to {
    opacity: $opacity-to;
  }
}

@keyframes fadein-visible {
  @include fadein(0, 1);
}

@keyframes fadein-semi-visible05 {
  @include fadein(0, .5);
}

@keyframes fadein-semi-visible08 {
  @include fadein(0, .8);
}

@keyframes fadein-semi-visible09 {
  @include fadein(0, .9);
}
